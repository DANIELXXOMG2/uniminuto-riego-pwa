; PlatformIO Project Configuration File
;
; Sistema de Riego Automatizado - Arduino UNO + ESP-12F (ESP8266)
; Comandos AT para comunicación HTTP con API Vercel
;
; Configuración para Arduino UNO con módulo ESP8266

; ============================================================================
; CONFIGURACIÓN COMÚN
; ============================================================================
[platformio]
default_envs = uno

; ============================================================================
; ENTORNO: ARDUINO UNO (RECOMENDADO)
; ============================================================================
[env:uno]
platform = atmelavr
board = uno
framework = arduino

; Velocidad de monitor serial (debe coincidir con Serial.begin())
monitor_speed = 9600

; Librerías requeridas
lib_deps = 
    bblanchon/ArduinoJson@^6.21.5
    ; SoftwareSerial está incluida en el core de Arduino

; Opciones de carga
upload_speed = 115200
upload_port = /dev/ttyUSB0  ; Cambiar según tu sistema
; Windows: COM3, COM4, etc.
; macOS: /dev/cu.usbserial-*, /dev/cu.SLAB_USBtoUART
; Linux: /dev/ttyUSB0, /dev/ttyACM0

; Monitor serial
monitor_port = /dev/ttyUSB0  ; Cambiar según tu sistema
monitor_filters = 
    default
    time

; ============================================================================
; ENTORNO ALTERNATIVO: ARDUINO MEGA 2560
; ============================================================================
; Si necesitas más pines I/O o más memoria, puedes usar Arduino Mega
[env:megaatmega2560]
platform = atmelavr
board = megaatmega2560
framework = arduino

monitor_speed = 9600

lib_deps = 
    bblanchon/ArduinoJson@^6.21.5

upload_speed = 115200
upload_port = /dev/ttyUSB0

monitor_port = /dev/ttyUSB0
monitor_filters = 
    default
    time

; ============================================================================
; NOTAS DE CONFIGURACIÓN
; ============================================================================
;
; CONFIGURACIÓN INICIAL:
; ----------------------
; 1. Copiar config.example.h a config.h
;    cp src/config.example.h src/config.h
; 
; 2. Editar config.h con tus credenciales:
;    - WIFI_SSID y WIFI_PASSWORD
;    - API_HOST (tu URL de Vercel)
;    - API_SECRET (debe coincidir con Vercel .env)
;
; DETECCIÓN DE PUERTO:
; --------------------
; - Ejecutar: pio device list
; - Actualizar upload_port y monitor_port en este archivo
;
; COMPILACIÓN Y CARGA:
; --------------------
; - Compilar: pio run
; - Cargar: pio run --target upload
; - Monitor: pio device monitor
; - Todo junto: pio run --target upload && pio device monitor
;
; CONEXIONES HARDWARE:
; --------------------
; ESP8266 (ESP-12F):
;   - Arduino Pin 3 (TX) -> ESP8266 RX (con divisor de voltaje 5V->3.3V)
;   - Arduino Pin 2 (RX) -> ESP8266 TX (directo)
;   - GND -> GND
;   - ESP8266 VCC -> 3.3V (fuente externa)
;   - ESP8266 CH_PD -> 3.3V
;
; Multiplexores (CD74HC4067):
;   - S0-S3 -> Arduino Pins 4-7
;   - MUX1 SIG -> Arduino Pin A0
;   - MUX2 SIG -> Arduino Pin A1
;
; Electroválvulas:
;   - Relé 1 -> Arduino Pin 8
;   - Relé 2 -> Arduino Pin 9
;   - Relé 3 -> Arduino Pin 10
;
; FIRMWARE ESP8266:
; -----------------
; - Debe tener firmware AT (versión 1.7+)
; - Verificar con: AT+GMR
; - Baudrate: 9600 (ajustar si es necesario con AT+UART_DEF=9600,8,1,0,0)
;
; PRUEBAS:
; --------
; - Monitor Serial a 9600 baud
; - Para pruebas locales:
;   1. Ejecutar: npm run dev (en apps/web)
;   2. Ejecutar: ngrok http 3000
;   3. Copiar URL de ngrok a API_HOST en config.h
;
; TROUBLESHOOTING:
; ----------------
; - Error "No se puede comunicar con ESP8266":
;   * Verificar conexiones (RX/TX cruzados)
;   * Verificar divisor de voltaje
;   * Verificar baudrate del ESP8266
;
; - Error "No se pudo conectar a WiFi":
;   * Verificar SSID y password en config.h
;   * Verificar que WiFi sea 2.4GHz (ESP8266 no soporta 5GHz)
;   * Verificar cobertura WiFi
;
; - Error "No se pudo conectar al servidor":
;   * Verificar API_HOST (debe ser sin https://)
;   * Verificar conectividad (hacer ping al servidor)
;   * Verificar que el servidor esté activo
;
; - Respuesta HTTP 401 Unauthorized:
;   * Verificar que API_SECRET coincida con Vercel
;   * Verificar formato del header Authorization
;
; LIBRERÍAS:
; ----------
; - ArduinoJson: Manipulación de JSON
; - SoftwareSerial: Comunicación con ESP8266 (incluida en Arduino core)
;
; ============================================================================
