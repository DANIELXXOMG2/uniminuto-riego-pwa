# CONFIGURACIÓN DE FIREBASE FUNCTIONS
# Sistema de Riego Inteligente - Uniminuto
# 
# Este archivo contiene las instrucciones para configurar variables de entorno
# en Firebase Functions. NO subir credenciales reales a Git.

# =============================================================================
# VARIABLES DE ENTORNO NECESARIAS
# =============================================================================

# Ninguna variable de entorno adicional es necesaria por ahora, ya que:
# 1. Firebase Admin SDK se inicializa automáticamente en Functions
# 2. Firestore y Messaging se configuran sin credenciales explícitas
# 3. Las Functions corren en el contexto autenticado de Firebase

# =============================================================================
# CONFIGURACIÓN DE ALERTAS
# =============================================================================

# Para modificar el umbral de humedad o el intervalo de chequeo de sensores,
# edita directamente los valores en /functions/src/index.ts:

# HUMIDITY_THRESHOLD = 20 (porcentaje)
# Sensor timeout check = cada 1 hora (schedule: "every 1 hours")

# =============================================================================
# CONFIGURAR FIREBASE FUNCTIONS (Si necesitas variables en el futuro)
# =============================================================================

# Para establecer variables de entorno en Firebase Functions:
# firebase functions:config:set variable.key="valor"

# Ejemplo:
# firebase functions:config:set notifications.humidity_threshold="20"
# firebase functions:config:set notifications.sensor_timeout="3600"

# Para ver la configuración actual:
# firebase functions:config:get

# Para usar variables en tu código:
# const config = functions.config();
# const threshold = config.notifications.humidity_threshold;

# =============================================================================
# VARIABLES DE ENTORNO LOCALES (Para testing)
# =============================================================================

# Para testing local con Firebase Emulator, crea un archivo:
# /functions/.runtimeconfig.json

# Ejemplo de .runtimeconfig.json:
# {
#   "notifications": {
#     "humidity_threshold": "20",
#     "sensor_timeout": "3600"
#   }
# }

# IMPORTANTE: Añade .runtimeconfig.json a .gitignore

# =============================================================================
# TESTING LOCAL
# =============================================================================

# 1. Instalar Firebase Emulator Suite:
# firebase init emulators

# 2. Iniciar emuladores:
# firebase emulators:start

# 3. Ejecutar Functions localmente:
# firebase functions:shell

# 4. Invocar función de test:
# sendTestNotification()

# =============================================================================
# MONITOREO
# =============================================================================

# Ver logs en tiempo real:
# firebase functions:log --only onLowHumidityAlert

# Ver logs de todas las funciones:
# firebase functions:log

# Ver logs en Firebase Console:
# https://console.firebase.google.com/project/uniminuto-riego-pwa/functions/logs

# =============================================================================
# COSTOS ESTIMADOS
# =============================================================================

# Ver estimación completa en /functions/FUNCTIONS_README.md
# 
# Resumen:
# - Invocaciones: 2M gratis/mes, luego $0.40/M
# - Tiempo de CPU: 400K GB-segundos gratis/mes
# - Tiempo de red: 200K GB-segundos gratis/mes
# - Salidas de red: 5GB gratis/mes
#
# Uso esperado: ~1,500 invocaciones/mes = GRATIS

# =============================================================================
# TROUBLESHOOTING
# =============================================================================

# Si las notificaciones no llegan:
# 1. Verificar que los usuarios tengan tokens FCM en Firestore
# 2. Verificar permisos de notificación en el navegador
# 3. Revisar logs de errores en Firebase Console
# 4. Verificar que el Service Worker esté registrado

# Si los triggers no se ejecutan:
# 1. Verificar que las Functions estén desplegadas
# 2. Revisar logs de Firestore para cambios en documentos
# 3. Verificar que los paths de los triggers coincidan con tu estructura

# Si el scheduler no funciona:
# 1. Verificar que Cloud Scheduler esté habilitado en GCP
# 2. Revisar logs de Cloud Scheduler
# 3. Verificar zona horaria del proyecto
